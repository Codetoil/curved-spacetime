plugins {
    id 'java'
    id "org.jetbrains.qodana" version "2025.1.1"
}

import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

project.ext.asmVersion = "9.8" // org.ow2.asm:asm, org.ow2.asm:asm-util, org.ow2.asm:asm-commons, org.ow2.asm:asm-analysis, org.ow2.asm:asm-tree
project.ext.lwjglVersion = "3.3.6" // org.lwjgl:lwjgl, org.lwjgl:lwjgl-glfw, org.lwjgl:lwjgl-vulkan
project.ext.junitVersion = "5.13.1" // org.junit:junit-bom
project.ext.jomlVersion = "1.10.8" // org.joml:joml
project.ext.tinyLoggerVersion = "2.7.0" // org.tinylog:tinylog-impl
project.ext.quiltLoaderVersion = "0.29.0-beta.8" // org.quiltmc:quilt-loader
project.ext.tinyMappingsParserVersion = "0.3.0+build.17" // net.fabricmc:tiny-mappings-parser
project.ext.tinyRemapperVersion = "0.11.1" // net.fabricmc:tiny-remapper
project.ext.accessWidenerVersion = "2.1.0" // net.fabricmc:access-widener
project.ext.spongeMixinVersion = "0.15.5+mixin.0.8.7" // net.fabricmc:sponge-mixin
project.ext.gsonVersion = "2.13.1" // com.google.code.gson:gson
project.ext.guavaVersion = "33.4.8-jre" // com.google.guava:guava
project.ext.quiltJson5Version = "1.0.4+final" // org.quiltmc:quilt-json5
project.ext.quiltConfigVersion = "1.3.2" // org.quiltmc:quilt-config
project.ext.mixinExtrasVersion = "0.5.0-rc.3" // io.github.llamalad7:mixinextras-fabric
project.ext.modLauncherVersion = "11.0.5" // cpw.mods:modlauncher

static String getLWJGLNativesName()
{
    String lwjglNatives = null

    if (DefaultNativePlatform.currentOperatingSystem.linux) {
        def osArch = System.getProperty("os.arch")
        lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
                ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
                : "natives-linux"
    }
    if (DefaultNativePlatform.currentOperatingSystem.macOsX) {
        lwjglNatives = System.getProperty("os.arch").startsWith("aarch64") ? "natives-macos-arm64" : "natives-macos"
    }
    if (DefaultNativePlatform.currentOperatingSystem.windows) {
        def osArch = System.getProperty("os.arch")
        lwjglNatives = osArch.contains("64")
                ? "natives-windows${osArch.startsWith("aarch64") ? "-arm64" : ""}"
                : "natives-windows-x86"
    }
    return lwjglNatives
}

subprojects { Project project ->
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    repositories {
        mavenCentral()
        maven {
            url = "https://maven.fabricmc.net/"
        }
        maven {
            url = "https://maven.quiltmc.org/repository/release/"
        }
        maven {
            url = "https://maven.neoforged.net/releases"
        }
    }
}

dependencies {}

qodanaScan {
    arguments = ["--ide", "QDJVMC"]
}