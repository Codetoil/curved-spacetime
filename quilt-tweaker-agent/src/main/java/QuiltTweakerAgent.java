/**
 * Curved Spacetime is an easy-to-use modular simulator for General Relativity.<br>
 * Copyright (C) 2023  Anthony Michalek (Codetoil)<br>
 * Copyright 2016 FabricMC<br>
 * <br>
 * This file is part of Curved Spacetime<br>
 * <br>
 * This program is free software: you can redistribute it and/or modify <br>
 * it under the terms of the GNU General Public License as published by <br>
 * the Free Software Foundation, either version 3 of the License, or <br>
 * (at your option) any later version.<br>
 * <br>
 * This program is distributed in the hope that it will be useful,<br>
 * but WITHOUT ANY WARRANTY; without even the implied warranty of<br>
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<br>
 * GNU General Public License for more details.<br>
 * <br>
 * You should have received a copy of the GNU General Public License<br>
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.<br>
 */

import org.tinylog.Logger;

import java.io.File;
import java.io.IOException;
import java.lang.instrument.ClassFileTransformer;
import java.lang.instrument.IllegalClassFormatException;
import java.lang.instrument.Instrumentation;
import java.security.ProtectionDomain;
import java.util.Arrays;
import java.util.jar.JarFile;

public class QuiltTweakerAgent {
    public static void premain(String agentArgs, Instrumentation inst) throws IOException {
        String classpath = System.getProperty("java.class.path");
        String[] classpathEntries = classpath.split(File.pathSeparator);
        Arrays.stream(classpathEntries)
                .filter((classPathEntry) -> classPathEntry.contains("asm"))
                .forEach((classPathEntry) ->
                {
                    try {
                        inst.appendToBootstrapClassLoaderSearch(new JarFile(classPathEntry));
                    } catch (IOException e) {
                        throw new RuntimeException(e);
                    }
                });
        inst.addTransformer(
                new ClassFileTransformer() {
                    @Override
                    public byte[] transform(ClassLoader loader,
                                            String className,
                                            Class<?> classBeingRedefined,
                                            ProtectionDomain protectionDomain,
                                            byte[] classfileBuffer) throws IllegalClassFormatException {
                        if (className.equals("net/fabricmc/api/EnvType"))
                        {
                            return new byte[] {
                                    (byte) 0xCA, (byte) 0xFE, (byte) 0xBA, (byte) 0xBE, 0x00, 0x00, 0x00, 0x41, 0x00, 0x37, 0x07, 0x00, 0x02, 0x01, 0x00, 0x18,
                                    0x6E, 0x65, 0x74, 0x2F, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x6D, 0x63, 0x2F, 0x61, 0x70, 0x69,
                                    0x2F, 0x45, 0x6E, 0x76, 0x54, 0x79, 0x70, 0x65, 0x09, 0x00, 0x01, 0x00, 0x04, 0x0C, 0x00, 0x05,
                                    0x00, 0x06, 0x01, 0x00, 0x06, 0x43, 0x4C, 0x49, 0x45, 0x4E, 0x54, 0x01, 0x00, 0x1A, 0x4C, 0x6E,
                                    0x65, 0x74, 0x2F, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x6D, 0x63, 0x2F, 0x61, 0x70, 0x69, 0x2F,
                                    0x45, 0x6E, 0x76, 0x54, 0x79, 0x70, 0x65, 0x3B, 0x09, 0x00, 0x01, 0x00, 0x08, 0x0C, 0x00, 0x09,
                                    0x00, 0x06, 0x01, 0x00, 0x06, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x09, 0x00, 0x01, 0x00, 0x0B,
                                    0x0C, 0x00, 0x0C, 0x00, 0x06, 0x01, 0x00, 0x10, 0x43, 0x55, 0x52, 0x56, 0x45, 0x44, 0x5F, 0x53,
                                    0x50, 0x41, 0x43, 0x45, 0x54, 0x49, 0x4D, 0x45, 0x09, 0x00, 0x01, 0x00, 0x0E, 0x0C, 0x00, 0x0F,
                                    0x00, 0x10, 0x01, 0x00, 0x07, 0x24, 0x56, 0x41, 0x4C, 0x55, 0x45, 0x53, 0x01, 0x00, 0x1B, 0x5B,
                                    0x4C, 0x6E, 0x65, 0x74, 0x2F, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x6D, 0x63, 0x2F, 0x61, 0x70,
                                    0x69, 0x2F, 0x45, 0x6E, 0x76, 0x54, 0x79, 0x70, 0x65, 0x3B, 0x0A, 0x00, 0x12, 0x00, 0x13, 0x07,
                                    0x00, 0x10, 0x0C, 0x00, 0x14, 0x00, 0x15, 0x01, 0x00, 0x05, 0x63, 0x6C, 0x6F, 0x6E, 0x65, 0x01,
                                    0x00, 0x14, 0x28, 0x29, 0x4C, 0x6A, 0x61, 0x76, 0x61, 0x2F, 0x6C, 0x61, 0x6E, 0x67, 0x2F, 0x4F,
                                    0x62, 0x6A, 0x65, 0x63, 0x74, 0x3B, 0x0A, 0x00, 0x17, 0x00, 0x18, 0x07, 0x00, 0x19, 0x0C, 0x00,
                                    0x1A, 0x00, 0x1B, 0x01, 0x00, 0x0E, 0x6A, 0x61, 0x76, 0x61, 0x2F, 0x6C, 0x61, 0x6E, 0x67, 0x2F,
                                    0x45, 0x6E, 0x75, 0x6D, 0x01, 0x00, 0x07, 0x76, 0x61, 0x6C, 0x75, 0x65, 0x4F, 0x66, 0x01, 0x00,
                                    0x35, 0x28, 0x4C, 0x6A, 0x61, 0x76, 0x61, 0x2F, 0x6C, 0x61, 0x6E, 0x67, 0x2F, 0x43, 0x6C, 0x61,
                                    0x73, 0x73, 0x3B, 0x4C, 0x6A, 0x61, 0x76, 0x61, 0x2F, 0x6C, 0x61, 0x6E, 0x67, 0x2F, 0x53, 0x74,
                                    0x72, 0x69, 0x6E, 0x67, 0x3B, 0x29, 0x4C, 0x6A, 0x61, 0x76, 0x61, 0x2F, 0x6C, 0x61, 0x6E, 0x67,
                                    0x2F, 0x45, 0x6E, 0x75, 0x6D, 0x3B, 0x0A, 0x00, 0x17, 0x00, 0x1D, 0x0C, 0x00, 0x1E, 0x00, 0x1F,
                                    0x01, 0x00, 0x06, 0x3C, 0x69, 0x6E, 0x69, 0x74, 0x3E, 0x01, 0x00, 0x16, 0x28, 0x4C, 0x6A, 0x61,
                                    0x76, 0x61, 0x2F, 0x6C, 0x61, 0x6E, 0x67, 0x2F, 0x53, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3B, 0x49,
                                    0x29, 0x56, 0x08, 0x00, 0x05, 0x0A, 0x00, 0x01, 0x00, 0x1D, 0x08, 0x00, 0x09, 0x08, 0x00, 0x0C,
                                    0x0A, 0x00, 0x01, 0x00, 0x25, 0x0C, 0x00, 0x26, 0x00, 0x27, 0x01, 0x00, 0x07, 0x24, 0x76, 0x61,
                                    0x6C, 0x75, 0x65, 0x73, 0x01, 0x00, 0x1D, 0x28, 0x29, 0x5B, 0x4C, 0x6E, 0x65, 0x74, 0x2F, 0x66,
                                    0x61, 0x62, 0x72, 0x69, 0x63, 0x6D, 0x63, 0x2F, 0x61, 0x70, 0x69, 0x2F, 0x45, 0x6E, 0x76, 0x54,
                                    0x79, 0x70, 0x65, 0x3B, 0x01, 0x00, 0x06, 0x76, 0x61, 0x6C, 0x75, 0x65, 0x73, 0x01, 0x00, 0x04,
                                    0x43, 0x6F, 0x64, 0x65, 0x01, 0x00, 0x0F, 0x4C, 0x69, 0x6E, 0x65, 0x4E, 0x75, 0x6D, 0x62, 0x65,
                                    0x72, 0x54, 0x61, 0x62, 0x6C, 0x65, 0x01, 0x00, 0x2E, 0x28, 0x4C, 0x6A, 0x61, 0x76, 0x61, 0x2F,
                                    0x6C, 0x61, 0x6E, 0x67, 0x2F, 0x53, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3B, 0x29, 0x4C, 0x6E, 0x65,
                                    0x74, 0x2F, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x6D, 0x63, 0x2F, 0x61, 0x70, 0x69, 0x2F, 0x45,
                                    0x6E, 0x76, 0x54, 0x79, 0x70, 0x65, 0x3B, 0x01, 0x00, 0x12, 0x4C, 0x6F, 0x63, 0x61, 0x6C, 0x56,
                                    0x61, 0x72, 0x69, 0x61, 0x62, 0x6C, 0x65, 0x54, 0x61, 0x62, 0x6C, 0x65, 0x01, 0x00, 0x04, 0x6E,
                                    0x61, 0x6D, 0x65, 0x01, 0x00, 0x12, 0x4C, 0x6A, 0x61, 0x76, 0x61, 0x2F, 0x6C, 0x61, 0x6E, 0x67,
                                    0x2F, 0x53, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3B, 0x01, 0x00, 0x10, 0x4D, 0x65, 0x74, 0x68, 0x6F,
                                    0x64, 0x50, 0x61, 0x72, 0x61, 0x6D, 0x65, 0x74, 0x65, 0x72, 0x73, 0x01, 0x00, 0x04, 0x74, 0x68,
                                    0x69, 0x73, 0x01, 0x00, 0x09, 0x53, 0x69, 0x67, 0x6E, 0x61, 0x74, 0x75, 0x72, 0x65, 0x01, 0x00,
                                    0x03, 0x28, 0x29, 0x56, 0x01, 0x00, 0x08, 0x3C, 0x63, 0x6C, 0x69, 0x6E, 0x69, 0x74, 0x3E, 0x01,
                                    0x00, 0x2C, 0x4C, 0x6A, 0x61, 0x76, 0x61, 0x2F, 0x6C, 0x61, 0x6E, 0x67, 0x2F, 0x45, 0x6E, 0x75,
                                    0x6D, 0x3C, 0x4C, 0x6E, 0x65, 0x74, 0x2F, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x6D, 0x63, 0x2F,
                                    0x61, 0x70, 0x69, 0x2F, 0x45, 0x6E, 0x76, 0x54, 0x79, 0x70, 0x65, 0x3B, 0x3E, 0x3B, 0x01, 0x00,
                                    0x0A, 0x53, 0x6F, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6C, 0x65, 0x01, 0x00, 0x0C, 0x45, 0x6E,
                                    0x76, 0x54, 0x79, 0x70, 0x65, 0x2E, 0x6A, 0x61, 0x76, 0x61, 0x40, 0x31, 0x00, 0x01, 0x00, 0x17,
                                    0x00, 0x00, 0x00, 0x04, 0x40, 0x19, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x40, 0x19, 0x00, 0x09,
                                    0x00, 0x06, 0x00, 0x00, 0x40, 0x19, 0x00, 0x0C, 0x00, 0x06, 0x00, 0x00, 0x10, 0x1A, 0x00, 0x0F,
                                    0x00, 0x10, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x28, 0x00, 0x27, 0x00, 0x01, 0x00, 0x29,
                                    0x00, 0x00, 0x00, 0x22, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, (byte) 0xB2, 0x00, 0x0D, (byte) 0xB6,
                                    0x00, 0x11, (byte) 0xC0, 0x00, 0x12, (byte) 0xB0, 0x00, 0x00, 0x00, 0x01, 0x00, 0x2A, 0x00, 0x00, 0x00, 0x06,
                                    0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x09, 0x00, 0x1A, 0x00, 0x2B, 0x00, 0x02, 0x00, 0x29,
                                    0x00, 0x00, 0x00, 0x34, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0A, 0x12, 0x01, 0x2A, (byte) 0xB8,
                                    0x00, 0x16, (byte) 0xC0, 0x00, 0x01, (byte) 0xB0, 0x00, 0x00, 0x00, 0x02, 0x00, 0x2A, 0x00, 0x00, 0x00, 0x06,
                                    0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x01, 0x00, 0x00,
                                    0x00, 0x0A, 0x00, 0x2D, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x2F, 0x00, 0x00, 0x00, 0x05, 0x01, 0x00,
                                    0x00, (byte) 0x80, 0x00, 0x00, 0x02, 0x00, 0x1E, 0x00, 0x1F, 0x00, 0x03, 0x00, 0x29, 0x00, 0x00, 0x00,
                                    0x31, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x2A, 0x2B, 0x1C, (byte) 0xB7, 0x00, 0x1C, (byte) 0xB1,
                                    0x00, 0x00, 0x00, 0x02, 0x00, 0x2A, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03,
                                    0x00, 0x2C, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x30, 0x00, 0x06,
                                    0x00, 0x00, 0x00, 0x2F, 0x00, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
                                    0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x02, 0x00, 0x32, 0x10, 0x0A, 0x00, 0x26, 0x00, 0x27, 0x00,
                                    0x01, 0x00, 0x29, 0x00, 0x00, 0x00, 0x2F, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x06,
                                    (byte) 0xBD, 0x00, 0x01, 0x59, 0x03, (byte) 0xB2, 0x00, 0x03, 0x53, 0x59, 0x04, (byte) 0xB2, 0x00, 0x07, 0x53, 0x59,
                                    0x05, (byte) 0xB2, 0x00, 0x0A, 0x53, (byte) 0xB0, 0x00, 0x00, 0x00, 0x01, 0x00, 0x2A, 0x00, 0x00, 0x00, 0x06,
                                    0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x08, 0x00, 0x33, 0x00, 0x32, 0x00, 0x01, 0x00, 0x29,
                                    0x00, 0x00, 0x00, 0x52, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2E, (byte) 0xBB, 0x00, 0x01, 0x59,
                                    0x12, 0x20, 0x03, (byte) 0xB7, 0x00, 0x21, (byte) 0xB3, 0x00, 0x03, (byte) 0xBB, 0x00, 0x01, 0x59, 0x12, 0x22, 0x04,
                                    (byte) 0xB7, 0x00, 0x21, (byte) 0xB3, 0x00, 0x07, (byte) 0xBB, 0x00, 0x01, 0x59, 0x12, 0x23, 0x05, (byte) 0xB7, 0x00, 0x21,
                                    (byte) 0xB3, 0x00, 0x0A, (byte) 0xB8, 0x00, 0x24, (byte) 0xB3, 0x00, 0x0D, (byte) 0xB1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x2A,
                                    0x00, 0x00, 0x00, 0x12, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x0D, 0x00, 0x05, 0x00, 0x1A,
                                    0x00, 0x06, 0x00, 0x27, 0x00, 0x03, 0x00, 0x02, 0x00, 0x31, 0x00, 0x00, 0x00, 0x02, 0x00, 0x34,
                                    0x00, 0x35, 0x00, 0x00, 0x00, 0x02, 0x00, 0x36};
                            /*
                             * Curved Spacetime is an easy-to-use modular simulator for General Relativity.<br>
                             * Copyright (C) 2023  Anthony Michalek (Codetoil)<br>
                             * Copyright 2022, 2023 QuiltMC<br>
                             * <br>
                             * The following file is part of Curved Spacetime<br>
                             * <br>
                             * This program is free software: you can redistribute it and/or modify <br>
                             * it under the terms of the GNU General Public License as published by <br>
                             * the Free Software Foundation, either version 3 of the License, or <br>
                             * (at your option) any later version.<br>
                             * <br>
                             * This program is distributed in the hope that it will be useful,<br>
                             * but WITHOUT ANY WARRANTY; without even the implied warranty of<br>
                             * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<br>
                             * GNU General Public License for more details.<br>
                             * <br>
                             * You should have received a copy of the GNU General Public License<br>
                             * along with this program.  If not, see <https://www.gnu.org/licenses/>.<br>
                             */
                            /*
                             * package net.fabricmc.api;
                             *
                             * public enum EnvType {
                             *     CLIENT,
                             *     SERVER,
                             *     CURVED_SPACETIME;
                             * }
                             */
                        }
                        return classfileBuffer;
                    }
                }
        );
    }
}
